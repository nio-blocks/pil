{
  "nio/PILBase64Decode": {
    "version": "0.1.0",
    "description": "Decode a base64-encoded string to a PIL.Image object",
    "categories": [
      "Graphics"
    ],
    "properties": {},
    "inputs": {
      "default": {
        "description": "Any list of signals\n  - *image* (string) base64 representation of the image"
      }
    },
    "outputs": {
      "default": {
        "description": "Same list of signals as input.\n  - *image* (object) PIL.Image object"
      }
    },
    "commands": {}
  },
  "nio/PILBase64Encode": {
    "version": "0.1.0",
    "description": "Convert a PIL image to a base64-encoded string",
    "categories": [
      "Graphics"
    ],
    "properties": {},
    "inputs": {
      "default": {
        "description": "Any list of signals\n  - *image* (object) PIL.Image object"
      }
    },
    "outputs": {
      "default": {
        "description": "Same list of signals as input.\n  - *image* (string) base64 representation of the image"
      }
    },
    "commands": {}
  },
  "nio/PILCropImage": {
    "version": "0.1.0",
    "description": "Crop a PIL image to the specified region",
    "categories": [
      "Graphics"
    ],
    "properties": {
      "left": {
        "title": "Left Edge",
        "type": "IntType",
        "description": "Pixel offset from left edge of original image",
        "default": 0
      },
      "lower": {
        "title": "Lower Edge",
        "type": "IntType",
        "description": "Pixel offset from bottom edge of original image",
        "default": "{{ min($image.width, $image.height) }}"
      },
      "right": {
        "title": "Right Edge",
        "type": "IntType",
        "description": "Pixel offset from right edge of original image",
        "default": "{{ min($image.width, $image.height) }}"
      },
      "upper": {
        "title": "Upper Edge",
        "type": "IntType",
        "description": "Pixel offset from top edge of original image",
        "default": 0
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals\n  - *image* (object) PIL.Image object"
      }
    },
    "outputs": {
      "default": {
        "description": "Same list of signals as input.\n  - *image* (object) PIL.Image object with size (`right - left`, `lower - upper`)"
      }
    },
    "commands": {}
  },
  "nio/PILDrawText": {
    "version": "0.1.0",
    "description": "Draw text to an existing Python Image Library (PIL) Image.",
    "categories": [
      "Graphics"
    ],
    "properties": {
      "coordinate": {
        "title": "Coordinate",
        "type": "ObjectType",
        "description": "X, Y coordinates to start text.",
        "default": {
          "x": "0",
          "y": "0"
        }
      },
      "text": {
        "title": "Text",
        "type": "Type",
        "description": "Text to draw to image.",
        "default": "Hello, n.io!"
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals\n  - *image* (object) PIL.Image object"
      }
    },
    "outputs": {
      "default": {
        "description": "Same list of signals as input.\n  - *image* (object) original image with text added."
      }
    },
    "commands": {}
  },
  "nio/PILImageFromArray": {
    "version": "0.1.0",
    "description": "Convert an array to a PIL.Image object",
    "categories": [
      "Graphics"
    ],
    "properties": {
      "input_array": {
        "title": "Array to Convert",
        "type": "Type",
        "description": "An image stored in an array-like object",
        "default": "{{ $image }}"
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals"
      }
    },
    "outputs": {
      "default": {
        "description": "Same list of signals as input.\n  - *image* (object) PIL.Image object"
      }
    },
    "commands": {}
  },
  "nio/PILImageToArray": {
    "version": "0.1.0",
    "description": "Convert an image to a numpy.ndarray",
    "categories": [
      "Graphics"
    ],
    "properties": {},
    "inputs": {
      "default": {
        "description": "Any list of signals\n  - *image* (object) PIL.Image object, nested sequence, or any array-like object"
      }
    },
    "outputs": {
      "default": {
        "description": "Same list of signals as input.\n  - *image* (object) array representation of input object"
      }
    },
    "commands": {}
  },
  "nio/PILNewImage": {
    "version": "0.1.0",
    "description": "Create a new Python Image Library (PIL) Image and store it in the *image* attribute of the input signal.",
    "categories": [
      "Graphics"
    ],
    "properties": {
      "mode": {
        "title": "Image Mode",
        "type": "SelectType",
        "description": "Select color mode for the image, one of RGB (3-channel color), RGB with Alpha, or Monochrome.",
        "default": "RGB"
      },
      "size": {
        "title": "Size",
        "type": "ObjectType",
        "description": "X, Y size of new image.",
        "default": {
          "x": "64",
          "y": "48"
        }
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals."
      }
    },
    "outputs": {
      "default": {
        "description": "Same list of signals as input.\n  - *image* (object) PIL.Image object"
      }
    },
    "commands": {}
  },
  "nio/PILOpenFile": {
    "version": "0.1.0",
    "description": "Load an image file from disk and create a new Python Image Library (PIL) Image and store it in the *image* attribute of the input signal.",
    "categories": [
      "File System",
      "Graphics"
    ],
    "properties": {
      "file": {
        "title": "Image File",
        "type": "FileType",
        "description": "Location of image file to open",
        "default": "niologo.png"
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals."
      }
    },
    "outputs": {
      "default": {
        "description": "Same list of signals as input.\n  - *image* (object) PIL.Image object"
      }
    },
    "commands": {}
  },
  "nio/PILResizeImage": {
    "version": "0.1.0",
    "description": "Resize a PIL image to the specified dimensions",
    "categories": [
      "Graphics"
    ],
    "properties": {
      "x": {
        "title": "Width",
        "type": "IntType",
        "description": "Output image width, in pixels",
        "default": "{{ $image.width * 0.5 }}"
      },
      "y": {
        "title": "Height",
        "type": "IntType",
        "description": "Output image height, in pixels",
        "default": "{{ $image.height * 0.5 }}"
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals\n  - *image* (object) PIL.Image object"
      }
    },
    "outputs": {
      "default": {
        "description": "Same list of signals as input.\n  - *image* (object) PIL.Image object with size (`x`, `y`)"
      }
    },
    "commands": {}
  },
  "nio/PILSaveImage": {
    "version": "0.1.0",
    "description": "Save a PIL image object to disk in the specified format",
    "categories": [
      "File System",
      "Graphics"
    ],
    "properties": {
      "file": {
        "title": "Image File",
        "type": "FileType",
        "description": "Path to save image file. The file extension specifies format.",
        "default": "my_image.jpg"
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals\n  - *image* (object) PIL.Image object"
      }
    },
    "outputs": {
      "default": {
        "description": "Same list of signals as input.\n  - *image* (object) PIL.Image object"
      }
    },
    "commands": {}
  }
}